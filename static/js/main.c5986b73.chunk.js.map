{"version":3,"sources":["components/TableCell.jsx","components/TableRow.jsx","components/Table.jsx","App.js","index.js"],"names":["TableCell","console","log","this","props","color","className","onClick","e","target","onMouseDown","handleMouseDown","onMouseOver","handleMouseOver","onMouseUp","handleMouseUp","Component","TableRow","columns","map","column","index","toString","key","row","value","Table","rows","App","handleAddRow","setState","state","concat","length","event","style","backgroundColor","isDragged","handleAddColumn","handleRemoveRow","slice","handleRemoveColumn","handleChangeColor","fillCellsWithColor","cells","i","bind","currentColor","React","createRef","Nav","onSelect","Button","NavDropdown","title","id","Item","eventKey","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5986b73.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport '../styles/Table.css' \r\n\r\nclass TableCell extends Component {\r\n\r\n  \r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    console.log(\"table cell\" + this.props.color)\r\n    return (<td className=\"uncolored\" \r\n    onClick={(e) => e.target.className = this.props.color}\r\n    onMouseDown = {this.props.handleMouseDown}\r\n    onMouseOver = {this.props.handleMouseOver}\r\n    onMouseUp = {this.props.handleMouseUp}\r\n    >\r\n    </td>);\r\n  }\r\n}\r\n\r\nexport default TableCell;\r\n","import React, { Component } from \"react\";\r\nimport TableCell from \"./TableCell\";\r\n\r\nclass TableRow extends Component {\r\n  render() {\r\n    console.log(\"Table \" + this.props.color)\r\n    const columns = () =>\r\n      this.props.columns.map((column, index) => {\r\n        console.log(column.toString(10) + \"\" + index);\r\n        return (\r\n          <TableCell\r\n            key={index.toString(10) + this.props.row}\r\n            value={index.toString(10) + this.props.row}\r\n            color={this.props.color}\r\n            handleMouseDown={this.props.handleMouseDown}\r\n            handleMouseUp={this.props.handleMouseUp}\r\n            handleMouseOver={this.props.handleMouseOver}\r\n          />\r\n        );\r\n      });\r\n    return <tr>{columns()}</tr>;\r\n  }\r\n}\r\nexport default TableRow;\r\n","import React, { Component } from \"react\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nclass Table extends Component {\r\n\r\n  render() {\r\n    console.log(\"Table \" + this.props.color)\r\n    const rows = () => this.props.rows.map((row, index) => {\r\n      return <TableRow key={index} columns={this.props.columns} row={index} color={this.props.color}\r\n      handleMouseDown={this.props.handleMouseDown}\r\n      handleMouseUp={this.props.handleMouseUp}\r\n      handleMouseOver={this.props.handleMouseOver}\r\n      />\r\n    });\r\n\r\n    return <table><tbody key={0}>{rows()}</tbody></table>;\r\n  }\r\n}\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"./components/Table\";\r\nimport {  Button, NavDropdown, Nav } from \"react-bootstrap\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: \"white\",\r\n      rows: [0],\r\n      columns: [0],\r\n      isDragged: false,\r\n    };\r\n    this.handleAddRow = this.handleAddRow.bind(this);\r\n    this.handleChangeColor = this.handleChangeColor.bind(this);\r\n    this.currentColor = React.createRef();\r\n\r\n  }\r\n\r\n \r\n  handleAddRow = () => {\r\n    this.setState((state) => {\r\n      const rows = state.rows.concat(state.rows.length);\r\n      return {\r\n        color: state.color,\r\n        rows: rows,\r\n        columns: state.columns,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleMouseDown = (event) => {\r\n    event.target.style.backgroundColor = this.state.color;\r\n    this.setState({isDragged: true})\r\n  }\r\n\r\n  handleMouseOver = (event) => {\r\n    if(this.state.isDragged)\r\n      event.target.style.backgroundColor= this.state.color\r\n  }\r\n\r\n  handleMouseUp = (event) => {\r\n    this.setState({isDragged: false})\r\n  }\r\n\r\n  handleAddColumn = () => {\r\n    this.setState((state) => {\r\n      const columns = state.columns.concat(state.columns.length);\r\n      return {\r\n        color: state.color,\r\n        rows: state.rows,\r\n        columns: columns,\r\n      };\r\n    });\r\n  }\r\n\r\n  handleRemoveRow = () => {\r\n    this.setState((state) => {\r\n      const rows = state.rows.slice(0, state.rows.length - 1);\r\n      return {\r\n        color: state.color,\r\n        rows: rows,\r\n        columns: state.columns,\r\n      };\r\n    });\r\n  }\r\n\r\n  handleRemoveColumn = () => {\r\n    this.setState((state) => {\r\n      const columns = state.columns.slice(0, state.rows.length - 1);\r\n      return {\r\n        color: state.color,\r\n        rows: state.rows,\r\n        columns: columns,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleChangeColor = (color) => {\r\n    this.setState({color: color});\r\n  };\r\n\r\n  fillCellsWithColor = () => {\r\n    let cells = this.state.columns;\r\n    for(let i = 0; i < cells.length; i++)\r\n    {\r\n      if(cells[i].className === \"uncolored\")\r\n      {\r\n        cells[i].className = this.state.color\r\n      }\r\n\r\n      return cells;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Nav>\r\n            <Nav className=\"mr-auto navbar-start\" onSelect={this.handleChangeColor}>\r\n              <Button onClick={this.handleAddColumn}>Add Column</Button>\r\n              <Button>Remove Column</Button>\r\n              \r\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item eventKey=\"blue\">Blue</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"red\">Red</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"white\">White</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n            <Nav>\r\n              <Button onClick={this.handleAddRow}>Add Row</Button>\r\n              <Button onClick={this.handleRemoveRow}>Remove Row</Button>\r\n            </Nav>\r\n        </Nav>\r\n        <Table color={this.state.color} rows={this.state.rows} columns={this.state.columns}\r\n        isDragged={this.isDragged}\r\n        handleMouseDown={this.handleMouseDown}\r\n        handleMouseUp={this.handleMouseUp}\r\n        handleMouseOver={this.handleMouseOver}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}